{"version":3,"sources":["App.js","index.js"],"names":["fruitDictionary","foodi","Object","keys","App","useState","food","setFood","meaning","setMeaning","className","onChange","event","inputFood","target","value","placeholder","style","padding","minWidth","map","onClick","fontSize","cursor","rootElement","document","getElementById","createRoot","render"],"mappings":"iLAGMA,EAAkB,CACtB,eAAM,SACN,eAAM,QACN,eAAM,aACN,eAAM,YACN,eAAM,QACN,eAAM,UAGFC,EAAQC,OAAOC,KAAKH,GAEX,SAASI,IACtB,MAAwBC,mBAAS,IAAG,mBAA7BC,EAAI,KAAEC,EAAO,KACpB,EAA8BF,mBAAS,kCAAiC,mBAAjEG,EAAO,KAAEC,EAAU,KAiB1B,OACE,sBAAKC,UAAU,MAAK,UAClB,6BAAI,YACJ,uBACEC,SAnBN,SAAuBC,GACrB,IAAMC,EAAYD,EAAME,OAAOC,MAC/BR,EAAQM,GAGNJ,EADEI,KAAab,EACJA,EAAgBa,GAEhB,kCAEf,EAWME,MAAOT,EACPU,YAAa,qBACbC,MAAO,CACLC,QAAS,MACTC,SAAU,SAGd,+BAAI,IAAEb,EAAK,OACX,+BAAI,IAAEE,EAAQ,OACbP,EAAMmB,KAAI,SAACd,GAAI,OACd,uBACEe,QAAS,WAnBfZ,EAAWT,EAmB4BM,GAAK,EACtCW,MAAO,CAAEK,SAAU,OAAQJ,QAAS,SAAUK,OAAQ,WAAY,UAEjE,IACAjB,EAAM,MACF,MAIf,CCrDA,IAAMkB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACxB,EAAG,M","file":"static/js/main.c9954609.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nconst fruitDictionary = {\n  \"üçá\": \"Grapes\",\n  \"üçà\": \"Melon\",\n  \"üçâ\": \"Watermelon\",\n  \"üçä\": \"Tangerine\",\n  \"üçã\": \"Lemon\",\n  \"üçå\": \"Banana\"\n};\n\nconst foodi = Object.keys(fruitDictionary);\n\nexport default function App() {\n  const [food, setFood] = useState(\"\");\n  const [meaning, setMeaning] = useState(\"translation will appear here..\");\n\n  function changeHandler(event) {\n    const inputFood = event.target.value;\n    setFood(inputFood);\n\n    if (inputFood in fruitDictionary) {\n      setMeaning(fruitDictionary[inputFood]);\n    } else {\n      setMeaning(\"failure to recognise this fruit\");\n    }\n  }\n\n  function emojiClickHandler(inputFood) {\n    setMeaning(fruitDictionary[inputFood]);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>FRUITSS</h1>\n      <input\n        onChange={changeHandler}\n        value={food}\n        placeholder={\"Search your fruits\"}\n        style={{\n          padding: \"1em\",\n          minWidth: \"80%\"\n        }}\n      />\n      <h2> {food} </h2>\n      <h3> {meaning} </h3>\n      {foodi.map((food) => (\n        <span\n          onClick={() => emojiClickHandler(food)}\n          style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\n        >\n          {\" \"}\n          {food}{\" \"}\n        </span>\n      ))}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}